library(prism)
library(devtools) #needed to download prism from github
library(raster) ##working with raster data
library(sp) ##manipulationg spatial data
library(rgdal)
library(doParallel) #allows parallel computing
library(foreach)  #need this with doparallel
library(ff)
library(zoo) #install.packages("zoo") , run install if package doesn't exist
library(maps)
library(reshape2)#install.packages('reshape2') , run install if package doesn't exist

rm(list=ls())


#1 extracting prism data for AOO buffers, only a snippet of one buffer size
#copy/paste and change for other buffers

FILES_buffer <- list.files(path="C:\\Users\\MimsLab\\Documents\\Ye\\buffer map\\1 km buffer\\1km buffer shapefiles", pattern = "\\.shp$")#create file list for loop
options(prism.path = "C:\\Users\\MimsLab\\Documents\\Ye\\Prism Data\\tmax") #path to all prism data, change the end to whatever metric
###1km buffer tmax
RS <- prism_stack(ls_prism_data()) #raster data
proj4string(RS)<-CRS("+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84")
prism_years <- t(ls_prism_data())
UseCores <- detectCores() -1 #detects one minus the max number of cores
cl <- makeCluster(UseCores) #create copies of R to run parallel
registerDoParallel(cl) #regist the cluster for parallel processing
foreach (i = 1:63) %dopar% {
  library(rgdal)
  library(raster) 
  library(ff)
  
  dat.name <- substr(FILES_buffer[i], 1, nchar(FILES_buffer[i])-4) #take the shape file name
  species <- readOGR("C:\\Users\\MimsLab\\Documents\\Ye\\buffer shape file by ID\\1km", dat.name) #read in the shapefile
  ext_ID1 <- extract(RS,species, buffer = 1000,fun= mean ,na.rm = T, weights = TRUE, small = TRUE, method = 'simple', df = TRUE)
  
  
  write.csv(ext_ID1, file =paste0("C:/Users/MimsLab/Documents/Ye/Prism Data/1 km buffer/min by 1km buffer/tmax/", dat.name,".csv"), row.names=FALSE) 
}

stopCluster(cl) #stop the parallel process

#2 30-year moving window
#section is for 1 environmental metric, copy and paste for others, change paths etc.
#change location of the files for moving windows
FILES_HUC8 <- list.files(path="C:\\Users\\MimsLab\\Documents\\Ye\\Prism Data\\HUC8 prism\\min by HUC8\\tmax", pattern = "\\.csv")#create file list for loop

setwd("C:\\Users\\MimsLab\\Documents\\Ye\\Prism Data\\HUC8 prism\\min by HUC8\\tmax")
for (i in 1:length(FILES_HUC8)){
  datfileHUC8 <- read.csv(FILES_HUC8[i], header=TRUE, check.names = FALSE) #read in the file from  the list
  RW_min <- as.data.frame(rollapply(datfileHUC8, width = 30, by = 1, FUN = min, na.rm = TRUE))
  colnames(RW_min)[1] <- "Year"
  RW_min[1] <- c(1925:2014)
  write.csv(RW_min, file =paste0("C:/Users/MimsLab/Documents/Ye/Prism Data/HUC8 prism/min by HUC8/moving window/tmax/", FILES_HUC8[i]), row.names=FALSE)
  
}

#3 pivot table, this has not been changed for AOO
#need to change paths and variable names (optional, recommended)

PATH_FINALDATA <- "C:/Users/MimsLab/Documents/Ye/Final location data"
WD_FINALDATA <- "C:/Users/MimsLab/Documents/Ye/Final location data"
FILES_FINALDATA <- list.files(path = PATH_FINALDATA)

setwd(WD_FINALDATA)

HUC8 <- readOGR("C:\\Users\\MimsLab\\Documents\\Ye\\HUC8", "HUC8") #dont need this for occurrence

for (i in 1:length(FILES_FINALDATA)){
  dat <- read.csv(FILES_FINALDATA[i], header=TRUE)
  
  #need to create a dataframe of year and ID from occurrence dataset
  
  ptable_df <- data.frame(dat$year, inside.park$HUC8) #year and some ID for each occurrence
  ptable_df[3] <- 1 #column of 1's
  ptable_df <- unique(ptable_df) #get rid of repeated years
  
  #dataframe
  pivot_table <- acast(ptable_df, dat.year ~ inside.park.HUC8) #change variable names
  
  speciename <- as.character(dat[2,10]) #get specie name 
  
  write.csv(pivot_table, file =paste0("C:/Users/MimsLab/Documents/Ye/HUC8 year 0 1/", speciename,".csv"), row.names=TRUE, na ="0") #save the file)
}


#4 filtering and multiplication
#paths and variable names have not been changed for AOO.
FILES_PTABLEHUC8 <- list.files(path="C:\\Users\\MimsLab\\Documents\\Ye\\Prism Data\\HUC8 prism\\min by HUC8\\HUC8 year 0 1")#create file list for loop
FILES_MWINDOWHUC8 <- list.files(path="C:\\Users\\MimsLab\\Documents\\Ye\\Prism Data\\HUC8 prism\\min by HUC8\\moving window\\tmax")#create file list for loop

matrix_sdtmax <- NULL
matrix_sdtmin <- NULL
matrix_sdtmean <- NULL
matrix_sdppt <- NULL
matrix_sdtmaxaug <- NULL
matrix_sdtminjan <- NULL
specie_list <- NULL

for (i in 1:length(FILES_PTABLEHUC8)){
  
  setwd("C:\\Users\\MimsLab\\Documents\\Ye\\Prism Data\\HUC8 prism\\min by HUC8\\HUC8 year 0 1")
  ptable_huc8 <- read.csv(FILES_PTABLEHUC8[i], header=TRUE, check.names=FALSE)
  colnames(ptable_huc8)[1] <- "Year"
  rownames(ptable_huc8) <- ptable_huc8$Year
  ptable_huc8 <- ptable_huc8[-1]
  ptable_huc8 <- as.matrix(ptable_huc8[1:length(colnames(ptable_huc8))])
  ptable_huc8 <- ptable_huc8[!rownames(ptable_huc8) > 2014,]
  
  setwd("C:\\Users\\MimsLab\\Documents\\Ye\\Prism Data\\HUC8 prism\\min by HUC8\\moving window\\tmax")
  mwindow_huc8 <- read.csv(FILES_MWINDOWHUC8[i], header=TRUE, check.names=FALSE)
  rownames(mwindow_huc8) <- mwindow_huc8$Year
  mwindow_huc8 <- mwindow_huc8[-1]
  mwindow_huc8 <- as.matrix(mwindow_huc8[1:length(colnames(mwindow_huc8))])
  
  filtered_mwindowhuc8 <- mwindow_huc8[rownames(mwindow_huc8) %in% rownames(ptable_huc8),]
  filtered_mwindowhuc8 <- filtered_mwindowhuc8[, sort(colnames(filtered_mwindowhuc8))]
  
  filtered_ptablehuc8 <- ptable_huc8[rownames(ptable_huc8) %in% rownames(filtered_mwindowhuc8),]
  filtered_ptablehuc8 <- filtered_ptablehuc8[, sort(colnames(filtered_ptablehuc8))]
  
  a <-  filtered_ptablehuc8 * filtered_mwindowhuc8
  b <- a
  b[b == 0] <- NA
  specie_list[i] <- sub(".csv","", FILES_PTABLEHUC8[i])
  matrix_sdtmax[i] <-  sd(b, na.rm = TRUE)
  
  write.csv(a, file = paste0("C:\\Users\\MimsLab\\Documents\\Ye\\Prism Data\\HUC8 prism\\min by HUC8\\multiplied matrix\\tmax\\", sub(".csv","", FILES_PTABLEHUC8[i]), ".csv"), row.names=TRUE) #output the file as csv
}
